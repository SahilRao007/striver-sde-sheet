double multiply(double number, int n) {
       double ans = 1.0;
       for(int i = 1;i<=n;i++) {
           ans = ans * number;
       }
       return ans; 
   }

double findNthRootOfM(int n, int m) {
	// Write your code here.
    // Write your code here.
       double low = 1;
       double high = m;
       double eps = 1e-8; 
       
       while((high - low) > eps) {
           double mid = (low + high) / 2.0; 
           if(multiply(mid, n) < m) {
               low = mid; 
           }
           else {
               high = mid; 
           }
       }
       return low;
}
  


//above method is correct but below is taking TLE and its almost same instead of calling the func we just loop it there 
then how is it taking long ?
ans--> even tho in TLE it was showing right ans, we forgot to put i++ in while loop and condition will be changed to i<=n





double findNthRootOfM(int n, int m) {
    double l=1;
    double h=m;
    double mid;
    double diff=1e-6;
    while(h-l>diff)
    {
        mid=(l+h)/2;
           double ans=1;
        double number=mid;
        int i=1;
        while(i<=n)
        {
            ans=ans*number;		//forgot to increment here thats why its showing error 
        }
       
         if(ans>m)
            h=mid;
        else
            l=mid;
    }
    return l;
}

class Solution {
public:ListNode* reverseList(ListNode* &head) {

        if (head == NULL||head->next==NULL)
            return head;

        ListNode* nnode = reverseList(head->next);
        head->next->next = head;
        head->next = NULL;
        return nnode;
    }
   
};


//2nd solution 
//iterative method 
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* forward;
        ListNode* temp=head;
        ListNode* prev=NULL;
        while(temp!=NULL)
        {
            forward=temp->next;
            temp->next=prev;
            prev=temp;
            temp=forward;
        }
        return prev;  
    }
};

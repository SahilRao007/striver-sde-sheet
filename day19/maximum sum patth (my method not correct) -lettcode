/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int solve(TreeNode* root)
    {   
        if(root->right==NULL and root->left==NULL)
        {
            return root->val;
        }
        if(root->right==NULL and root->left!=NULL)
        {   int sum=root->val + root->left->val;
            return max(sum,max(root->val,root->left->val));
        }
        if(root->left==NULL and root->right!=NULL)
        {   int sum=root->val + root->right->val;
            return max(sum,max(root->val,root->right->val));
        }
       int lsum=solve(root->left);
        int  rsum=solve(root->right);
       
        int ans;
        int sum=root->val+lsum+rsum;
        ans=max(sum,max(root->val,max(rsum,lsum)));
        return ans;
    }
public:
    int maxPathSum(TreeNode* root) {
        if(root==NULL)
            return root->val;
        return solve(root);
    }
};

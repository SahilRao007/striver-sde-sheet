class Solution {
    void solve(int ind, vector < int > & nums, vector < int > & ds, vector < vector < int >> & ans,int target) {
        if(target==0) 
        {
            ans.push_back(ds);
            return;
        }
         for (int i = ind; i < nums.size(); i++) {
            if (i != ind && nums[i] == nums[i - 1]) continue;
             if(nums[i]>target)
                 break;
            ds.push_back(nums[i]);
            solve(i + 1, nums, ds, ans,target-nums[i]);
            ds.pop_back();
         }
      }
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
          vector<vector<int>>ans;
        vector<int>output;
        int i=0;
        int sum=0;
        sort(candidates.begin(),candidates.end());
        solve(0,candidates,output,ans,target);
        return ans;
    }
};
